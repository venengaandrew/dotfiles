version: f7e32006
controllers:
  rog_ally:
    controller_mode:
      mode: unset
      dualsense:
        led_support: unset
        paddles_to_clicks: unset
        sync_gyro: unset
        flip_z: unset
        bluetooth_mode: unset
      dualsense_edge:
        led_support: unset
        sync_gyro: unset
        flip_z: unset
        bluetooth_mode: unset
    imu: unset
    imu_hz: unset
    led_brightness: unset
    select_reboots: unset
    nintendo_mode: unset
    share_to_qam: unset
    swap_armory: unset
    debug: unset
hhd:
  settings:
    overlay_enabled: unset
    powerbuttond: unset
    theme: unset
    decky_deprecation: unset
    version: unset
    version_ui: unset
    version_adj: unset
    update_error: unset
  http:
    enable: unset
    port: unset
    localhost: unset
    token: unset

#
#     _______   _______    ______  
#    /    /  ╲╲/    /  ╲╲_/      ╲╲
#   /        //        //        //
#  /         /         /         / 
#  ╲___/____/╲___/____/╲________/  
#  
# Handheld Daemon Profile Config
#
# This file contains the configuration options that will be set when
# applying the profile which shares this file name.
# This header is on the bottom to make editing easier with e.g., nano.
#
# Settings are applied once, when applying the profile, and only the ones
# that are stated change. Therefore, they may drift as the system state changes
# (e.g., using native TDP shortcuts, or controller profile shortcuts).
#
# It is possible to set all supported parameters using profiles, and
# it is encouraged for you to stack profiles together.
#
# For example, you can have TDP only profiles that control the energy budget,
# and controller profiles that switch controller behavior.
# Then, depending on the game, you can apply the appropriate 2 profiles
# together.
#
# This file and comments are autogenerated. Your comments will be discarded
# during configuration changes. Parameters with the value `unset` are
# ignored and are meant to act as a template for you to change them.
#
# - CONFIGURATION PARAMETERS
#
# ┌> controllers.rog_ally
# │ *Ally Controller*
# │ Allows for configuring the ROG Ally controllers to a unified output. 
# │
# │┌> controllers.rog_ally.controller_mode
# ││ *Controller Emulation*
# ││ Emulate different controller types to fuse ROG features. 
# ││ - modes: [uinput, dualsense, dualsense_edge]
# ││ - default: dualsense
# ││
# ││┌> controllers.rog_ally.controller_mode.uinput
# │││ *Xbox*
# │││ Creates a virtual `Handheld Daemon Controller` that can be used normally in 
# │││ apps. Back buttons are supported but steam will not detect them. If Gyroscope or 
# │││ Accelerometer are enabled, a Motion device will be created as well 
# │││ (experimental; works in Dolphin). 
# │││
# ││┌> controllers.rog_ally.controller_mode.dualsense
# │││ *Dualsense*
# │││ Emulates the Dualsense Sony controller from the Playstation 5. Since this 
# │││ controller does not have paddles, the paddles are mapped to left and right 
# │││ touchpad clicks. 
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense.led_support
# ││││ *LED Support*
# ││││ Passes through the LEDs to the controller, which allows games to control them. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense.paddles_to_clicks
# ││││ *Paddles to Clicks*
# ││││ Maps the paddles of the device to left and right touchpad clicks making them 
# ││││ usable in Steam. If more than 2 paddles (e.g., Legion Go) uses the top ones. If 
# ││││ extra buttons (e.g., Ayaneo, GPD), uses them instead. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense.sync_gyro
# ││││ *Gyro Output Sync*
# ││││ Steam relies on the IMU timestamp for the touchpad as Mouse and `Gyro to Mouse 
# ││││ [BETA]`. If the same timestamp is sent in 2 reports, this causes a division by 0 
# ││││ and instability. This option makes it so reports are sent only when there is a 
# ││││ new IMU timestamp, effectively limiting the responsiveness of the controller to 
# ││││ that of the IMU. This only makes a difference for the Legion Go (125hz), as all 
# ││││ the other handhelds are using 400hz by default. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense.flip_z
# ││││ *Invert Roll Axis*
# ││││ Inverts the roll (Z) axis compared to a real Dualsense controller. Useful for 
# ││││ Steam Input, since you want it to be inverted to look left to right, but an 
# ││││ issue in emulators. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense.bluetooth_mode
# ││││ *Bluetooth Mode*
# ││││ Emulates the controller in bluetooth mode instead of USB mode. This is the 
# ││││ default as it causes less issues with how apps interact with the controller. 
# ││││ However, using USB mode can improve LED support (?) in some games. Test and 
# ││││ report back! 
# ││││ - boolean: [False, True]
# ││└└ - default: True
# ││
# ││┌> controllers.rog_ally.controller_mode.dualsense_edge
# │││ *Dualsense Edge*
# │││ Emulates the expensive Dualsense Sony controller which enables paddle support. 
# │││ The edge controller is a bit obscure, so some games might not support it 
# │││ correctly. 
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense_edge.led_support
# ││││ *LED Support*
# ││││ Passes through the LEDs to the controller, which allows games to control them. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense_edge.sync_gyro
# ││││ *Gyro Output Sync*
# ││││ Steam relies on the IMU timestamp for the touchpad as Mouse and `Gyro to Mouse 
# ││││ [BETA]`. If the same timestamp is sent in 2 reports, this causes a division by 0 
# ││││ and instability. This option makes it so reports are sent only when there is a 
# ││││ new IMU timestamp, effectively limiting the responsiveness of the controller to 
# ││││ that of the IMU. This only makes a difference for the Legion Go (125hz), as all 
# ││││ the other handhelds are using 400hz by default. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense_edge.flip_z
# ││││ *Invert Roll Axis*
# ││││ Inverts the roll (Z) axis compared to a real Dualsense controller. Useful for 
# ││││ Steam Input, since you want it to be inverted to look left to right, but an 
# ││││ issue in emulators. 
# ││││ - boolean: [False, True]
# │││└ - default: True
# │││
# │││┌> controllers.rog_ally.controller_mode.dualsense_edge.bluetooth_mode
# ││││ *Bluetooth Mode*
# ││││ Emulates the controller in bluetooth mode instead of USB mode. This is the 
# ││││ default as it causes less issues with how apps interact with the controller. 
# ││││ However, using USB mode can improve LED support (?) in some games. Test and 
# ││││ report back! 
# ││││ - boolean: [False, True]
# │└└└ - default: True
# │
# │┌> controllers.rog_ally.imu
# ││ *Motion Support*
# ││ Enable gyroscope/accelerometer (IMU) support (.3% background CPU use) 
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> controllers.rog_ally.imu_hz
# ││ *Motion Hz*
# ││ Sets the sampling frequency for the IMU. 1600 requires an IMU patch. Check 
# ││ `/sys/bus/iio/devices/iio:device0/in_anglvel_sampling_frequency_available`. 
# ││ - options: [100, 200, 400, 800, 1600]
# │└ - default: 400
# │
# │┌> controllers.rog_ally.led_brightness
# ││ *Led Brightness*
# ││ When LEDs are configured, set their brightness. High does not work below 30% 
# ││ brightness. 
# ││ - options: [False, low, medium, high]
# │└ - default: medium
# │
# │┌> controllers.rog_ally.select_reboots
# ││ *Hold Select to Reboot*
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> controllers.rog_ally.nintendo_mode
# ││ *Nintendo Mode (A-B Swap)*
# ││ Swaps A with B and X with Y. 
# ││ - boolean: [False, True]
# │└ - default: False
# │
# │┌> controllers.rog_ally.share_to_qam
# ││ *Map Armory to QAM.*
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> controllers.rog_ally.swap_armory
# ││ *Swap ROG and Start/Select*
# ││ Swaps the Armory Crate and Command center buttons with start and select. 
# ││ - boolean: [False, True]
# │└ - default: False
# │
# │┌> controllers.rog_ally.debug
# ││ *Debug*
# ││ Output controller events to the console (high CPU use) and raises exceptions 
# ││ (HHD will crash on errors). 
# ││ - boolean: [False, True]
# └└ - default: False
# 
# ┌> hhd.settings
# │ 
# │ *Core Settings*
# │
# │┌> hhd.settings.overlay_enabled
# ││ *Overlay with QAM Double/Tripple press (requires restart)*
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> hhd.settings.powerbuttond
# ││ *Steam Powerbutton Handler*
# ││ Enables the Steam Powerbutton handler (responsible for the wink and powerbutton 
# ││ menu). 
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> hhd.settings.theme
# ││ *Theme*
# ││ Allows changing the theme in the UI. Default is either Diavolo or your 
# ││ distribution's theme. 
# ││ - options: [default, diavolo, ocean]
# │└ - default: default
# │
# │┌> hhd.settings.decky_deprecation
# ││ *It is no longer possible to update Decky from here. If you see this, update the Decky plugin manually.*
# │└ - default:  
# │
# │┌> hhd.settings.version
# ││ *Handheld Daemon Version*
# │└ Displays the Handheld Daemon version. 
# │
# │┌> hhd.settings.version_ui
# ││ *Handheld Daemon UI Version*
# │└ Displays the Handheld Daemon version. 
# │
# │┌> hhd.settings.version_adj
# ││ *Adjustor (TDP) Version*
# │└ Displays the Handheld Daemon version. 
# │
# │┌> hhd.settings.update_error
# ││ 
# └└ *Update Error*
# 
# ┌> hhd.http
# │ *API Configuration*
# │ Settings for configuring the http endpoint of HHD. 
# │
# │┌> hhd.http.enable
# ││ *Enable the API*
# ││ Enables the API of Handheld Daemon (required for decky and ui). 
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> hhd.http.port
# ││ *API Port*
# ││ Which port should the API be on? 
# │└ - default: 5335
# │
# │┌> hhd.http.localhost
# ││ *Limit Access to localhost*
# ││ Sets the API target to '127.0.0.1' instead '0.0.0.0'. 
# ││ - boolean: [False, True]
# │└ - default: True
# │
# │┌> hhd.http.token
# ││ *Use Security token*
# ││ Generates a security token in `~/.config/hhd/token` that is required for 
# ││ authentication. 
# ││ - boolean: [False, True]
# └└ - default: True
# 